package net.jeeshop.web.action.manage.report;import java.io.IOException;import java.net.URLDecoder;import java.util.LinkedHashMap;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import com.alibaba.fastjson.JSON;import net.jeeshop.core.Services;import net.jeeshop.core.system.bean.User;import net.jeeshop.services.manage.NvhlBaseVO.NvhlBaseService;import net.jeeshop.services.manage.NvhlBaseVO.bean.NvhlBaseVO;import net.jeeshop.services.manage.order.OrderService;import net.jeeshop.services.manage.order.bean.Order;import net.jeeshop.services.manage.product.ProductService;import net.jeeshop.services.manage.system.impl.UserService;import net.jeeshop.web.action.BaseController;/** * 报表、图表 *  * @author huangf *  */@Controller@RequestMapping("/manage/report")public class ReportAction extends BaseController<ReportInfo> {	private static final long serialVersionUID = 1L;	private static final org.slf4j.Logger logger = LoggerFactory.getLogger(ReportAction.class);	@Autowired	private ProductService	productService;	@Autowired	private OrderService orderService;		@Autowired	private NvhlBaseService  nvhlBaseservice;	@Autowired	private UserService userService;	public void setNvhlBaseservice(NvhlBaseService nvhlBaseservice)	{		this.nvhlBaseservice = nvhlBaseservice;	}	public void setOrderService(OrderService orderService) {		this.orderService = orderService;	}		@Override	public Services<ReportInfo> getService() {		return null;	}	public void setProductService(ProductService productService) {		this.productService = productService;	}	/**	 * 产品销售排行榜统计：图表的形式展示指定时间范围内的商品的销售情况，包括数量、金额等。	 * @return	 */	@RequestMapping("productSales")	public String productSales(){//		List<ReportInfo> list = orderdetailService.reportProductSales(new Orderdetail());//		return null;		return "manage/report/productSales";	}		/**	 * 销量统计：统计选择的时间范围内的销量情况。	 * @return	 */	@RequestMapping("orderSales")	public String orderSales(){//		logger.error("reportOrderSales....");//		try {//			Order order = new Order();//			order.setStartDate("2013-01");//			order.setEndDate("2014-05");//			List<ReportInfo> list = orderService.reportOrderSales(order);//			if(list==null){//				logger.error("reportOrderSales=0");//			}else{//				logger.error("reportOrderSales="+list.size());//			}//		} catch (Exception e) {//			e.printStackTrace();//		}		return "manage/report/orderSales";	}		/**	 * 查询指定时间范围内的订单的销量情况	 * @return	 * @throws java.io.IOException	 */	@RequestMapping("selectOrderSales")	@ResponseBody	public String selectOrderSales(ReportInfo e) throws IOException{		logger.error("selectOrderSales....startDate="+e.getStartDate()+",endDate="+e.getEndDate());		Order order = new Order();		order.setStartDate(e.getStartDate());		order.setEndDate(e.getEndDate());		List<ReportInfo> list = orderService.selectOrderSales(order);		if(list==null){			logger.error("reportOrderSales=0");		}else{			logger.error("reportOrderSales="+list.size());		}		if(list!=null && list.size()>0){			Map<String, String> map = new LinkedHashMap<String, String>();			StringBuilder amountBuff = new StringBuilder("[");			StringBuilder createdateBuff = new StringBuilder("[");			for(int i=0;i<list.size();i++){				ReportInfo item = list.get(i);				logger.error("item="+item.toString());				amountBuff.append(item.getSumAmount());				createdateBuff.append(item.getCreatedate());				if(i!=list.size()-1){					amountBuff.append(",");					createdateBuff.append(",");				}			}			amountBuff.append("]");			createdateBuff.append("]");						map.put("amountArr", amountBuff.toString());			map.put("orderdateArr", createdateBuff.toString());						logger.error("json="+JSON.toJSONString(map).toString());			return (JSON.toJSONString(map).toString());		}else{			return ("0");		}	}		/**	 * 查询指定时间范围内的产品的销量情况	 * @return	 * @throws java.io.IOException	 */	@RequestMapping("selectProductSales")	@ResponseBody	public String selectProductSales( HttpServletRequest request, ReportInfo e) throws IOException{				logger.error("selectProductSales....startDate="+e.getStartDate()+",endDate="+e.getEndDate());//		try {//			Thread.sleep(5000L);//		} catch (InterruptedException e1) {//			e1.printStackTrace();//		}				//sun注释掉修改成访问nvhlbase表的数据//		Order order = new Order();//		order.setStartDate(e.getStartDate());//		order.setEndDate(e.getEndDate());		 		NvhlBaseVO base = new NvhlBaseVO();		base.setStartDate(e.getStartDate());		base.setEndDate(e.getEndDate());				User user = new User();		String nickName = URLDecoder.decode(request.getParameter("name"),"utf-8");		if(!nickName.equals("")){			user.setNickname(nickName);			user = userService.selectOne(user);			if(user == null){				logger.error("没有业务员");				return "0";			}			base.setCreateAccount(user.getId());		}				List<ReportInfo> baseReportInfoList = nvhlBaseservice.selectProductSales(base);		if(baseReportInfoList==null){			logger.error("没有订单");			return "0";		}				if(baseReportInfoList!=null && baseReportInfoList.size()>0){			Map<String, String> map = new LinkedHashMap<String, String>();			StringBuilder productSellCountBuff = new StringBuilder("[");			StringBuilder productNameBuff = new StringBuilder("[");//			for(int i=0;i<list.size();i++){						for(int baseIndex = baseReportInfoList.size() - 1; baseIndex >= 0; baseIndex--){				ReportInfo baseItem = baseReportInfoList.get(baseIndex);				//				logger.error("item="+item.toString());				productSellCountBuff.append(baseItem.getSumAmount());				productNameBuff.append("'"+baseItem.getName()+"'");//				if(i!=list.size()-1){				if(baseIndex != 0){					productSellCountBuff.append(",");					productNameBuff.append(",");				}			}			productSellCountBuff.append("]");			productNameBuff.append("]");						map.put("productSellCountArr", productSellCountBuff.toString());			map.put("productNameArr", productNameBuff.toString());						logger.error("json="+JSON.toJSONString(map).toString());			return (JSON.toJSONString(map).toString());		}else{			return ("0");		}	}}