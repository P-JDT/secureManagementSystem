package net.jeeshop.services.front.order.impl;import java.util.List;import net.jeeshop.core.front.*;import net.jeeshop.core.FrontContainer;import net.jeeshop.core.ServersManager;import net.jeeshop.core.front.SystemManager;import net.jeeshop.services.front.order.OrderService;import net.jeeshop.services.front.order.bean.Order;import net.jeeshop.services.front.order.bean.OrderSimpleReport;import net.jeeshop.services.front.order.dao.OrderDao;import net.jeeshop.services.front.orderdetail.bean.Orderdetail;import net.jeeshop.services.front.orderdetail.dao.OrderdetailDao;import net.jeeshop.services.front.product.bean.Product;import net.jeeshop.services.front.product.bean.ProductStockInfo;import net.jeeshop.services.front.product.dao.ProductDao;import org.apache.commons.lang.StringUtils;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;@Servicepublic class OrderServiceImpl extends ServersManager<Order, OrderDao> implements		OrderService {	private static final org.slf4j.Logger logger = LoggerFactory			.getLogger(OrderServiceImpl.class);    @Autowired    @Override    public void setDao(OrderDao orderDao) {        this.dao = orderDao;    }    @Autowired	private OrderdetailDao orderdetailDao;    @Autowired	private ProductDao productDao;   		public void setProductDao(ProductDao productDao) {		this.productDao = productDao;	}				public void setOrderdetailDao(OrderdetailDao orderdetailDao) {		this.orderdetailDao = orderdetailDao;	}					//对商品进行砍库存，并同步内存中的库存数据//		if(!no){//			//如果检查没有出现库存不足的情况，则进行砍库存操作//			for (int i = 0; i < cartInfo.getProductList().size(); i++) {//				Product product = cartInfo.getProductList().get(i);//				ProductStockInfo stockInfo = SystemManager.productStockMap.get(product.getId());//				stockInfo.setStock(stockInfo.getStock() - product.getBuyCount());//				stockInfo.setChangeStock(true);//				SystemManager.productStockMap.put(product.getId(),stockInfo);//			}//		}										//创建支付记录对象				//记录配送信息				//记录订单创建日志			@Override	public List<Order> selectOrderInfo(Order order) {		return dao.selectOrderInfo(order);	}//	@Override//	public boolean updateOrderStatus(Order order) {//		if(order==null){//			throw new NullPointerException("参数不能为空！");//		}////		Orderpay orderpay = orderpayDao.selectById(order.getOrderpayID());//		if(orderpay==null){//			throw new NullPointerException("根据支付记录号查询不到支付记录信息！");//		}//		String orderid = orderpay.getOrderid();//订单ID//		//		//更新支付记录为成功支付//		Orderpay orderpay2 = new Orderpay();//		orderpay2.setId(order.getOrderpayID());//		orderpay2.setTradeNo(order.getTradeNo());//		orderpay2.setPaystatus(Orderpay.orderpay_paystatus_y);//		orderpayDao.update(orderpay2);//		//		//更新订单的支付状态为成功支付//		order.setId(orderid);//		order.setPaystatus(Order.order_paystatus_y);//		dao.update(order);//		return true;//	}	@Override	public boolean createOrder(Order order, List<Orderdetail> orderdetailList) throws Exception {		// TODO Auto-generated method stub		return false;	}	@Override	public boolean alipayNotify(String trade_status, String refund_status, String out_trade_no, String trade_no) {		// TODO Auto-generated method stub		return false;	}	@Override	public OrderSimpleReport selectOrdersSimpleReport(String account) {		// TODO Auto-generated method stub		return null;	}																										}